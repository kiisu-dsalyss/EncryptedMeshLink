# Raspberry Pi deployment Dockerfile
# Optimized for ARM architecture and low memory

FROM node:20-alpine AS installer

# Install git, bash, and udev tools for auto-updates and hardware detection
RUN apk add --no-cache git bash udev

# Set working directory
WORKDIR /app

# Copy package files and npm configuration
COPY package*.json .npmrc ./

# Install dependencies with memory limits
RUN npm install --max-old-space-size=512

# Copy source code
COPY . .

# Create A/B deployment structure
RUN mkdir -p /app/deployment/staging /app/deployment/production /app/deployment/backup

# Expose port
EXPOSE 3000

# Health check with longer timeout for Pi
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=2 \
    CMD npx tsx encryptedmeshlink.ts --health-check || exit 1

# Default command with memory optimization
CMD ["npx", "tsx", "--max-old-space-size=512", "encryptedmeshlink.ts"]
