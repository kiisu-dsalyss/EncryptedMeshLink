name: Build and Push Multi-Architecture Docker Images

on:
  push:
    branches: [master, main, develop]
    tags: ["v*"]
  pull_request:
    branches: [master, main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/encryptedmeshlink

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push standard Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Pi-optimized Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.pi
          platforms: linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pi-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pi-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate deployment instructions
        run: |
          echo "## ðŸŽ‰ New Docker Images Built!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Deploy for Raspberry Pi:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# Pull the latest Pi-optimized image:" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pi-latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or use the deployment script:" >> $GITHUB_STEP_SUMMARY
          echo "curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/master/scripts/quick-deploy-pi.sh | bash" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Images:" >> $GITHUB_STEP_SUMMARY
          echo "- **Standard**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\` (amd64, arm64, armv7)" >> $GITHUB_STEP_SUMMARY
          echo "- **Pi-Optimized**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pi-latest\` (arm64, armv7)" >> $GITHUB_STEP_SUMMARY
